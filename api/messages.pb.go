// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/messages.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Denotes what type of EDIT is being applied.
// There are only two types possible, inserting a character or deleting a character.
type EditType int32

const (
	EditType_INSERT EditType = 0
	EditType_DELETE EditType = 1
)

var EditType_name = map[int32]string{
	0: "INSERT",
	1: "DELETE",
}

var EditType_value = map[string]int32{
	"INSERT": 0,
	"DELETE": 1,
}

func (x EditType) String() string {
	return proto.EnumName(EditType_name, int32(x))
}

func (EditType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb9fb1f207fd5b8c, []int{0}
}

// Denotes which type of RPC the message is
type MessageType int32

const (
	// EDIT is a message representating any change made to a document by a user.
	// It is sent to  all other peers involved with said document.
	MessageType_EDIT MessageType = 0
	// INVITE is a message representing an invitation from the owner of one document to another peer.
	// It is used to allow other peers to join a single editing session.
	// For the purposes of this project, the sender of this message does not care if the receiver can actually accept this invitation.
	// It is up to the user to retry the attempt.
	MessageType_INVITE MessageType = 1
)

var MessageType_name = map[int32]string{
	0: "EDIT",
	1: "INVITE",
}

var MessageType_value = map[string]int32{
	"EDIT":   0,
	"INVITE": 1,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb9fb1f207fd5b8c, []int{1}
}

// Represents the change applied to a document (an edit)
type Edit struct {
	Type                 EditType `protobuf:"varint,1,opt,name=type,proto3,enum=api.EditType" json:"type,omitempty"`
	Pos                  int32    `protobuf:"varint,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Char                 int32    `protobuf:"varint,3,opt,name=char,proto3" json:"char,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Edit) Reset()         { *m = Edit{} }
func (m *Edit) String() string { return proto.CompactTextString(m) }
func (*Edit) ProtoMessage()    {}
func (*Edit) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb9fb1f207fd5b8c, []int{0}
}

func (m *Edit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Edit.Unmarshal(m, b)
}
func (m *Edit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Edit.Marshal(b, m, deterministic)
}
func (m *Edit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Edit.Merge(m, src)
}
func (m *Edit) XXX_Size() int {
	return xxx_messageInfo_Edit.Size(m)
}
func (m *Edit) XXX_DiscardUnknown() {
	xxx_messageInfo_Edit.DiscardUnknown(m)
}

var xxx_messageInfo_Edit proto.InternalMessageInfo

func (m *Edit) GetType() EditType {
	if m != nil {
		return m.Type
	}
	return EditType_INSERT
}

func (m *Edit) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Edit) GetChar() int32 {
	if m != nil {
		return m.Char
	}
	return 0
}

// Represents a message sent from a REDServer
// The contents of this changes depending on what type of message is being sent.
type REDMessage struct {
	// Indicates the type of message that is being sent. All messages must have this field.
	Type MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=api.MessageType" json:"type,omitempty"`
	// Indiciates the sender of this message. All messages must have this field.
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// Indicates the receipient of this message. All messages must have this field.
	Receipient string `protobuf:"bytes,3,opt,name=receipient,proto3" json:"receipient,omitempty"`
	// Represents the change being applied to a document. Only EDIT messages have this field.
	Edit                 *Edit    `protobuf:"bytes,4,opt,name=edit,proto3" json:"edit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *REDMessage) Reset()         { *m = REDMessage{} }
func (m *REDMessage) String() string { return proto.CompactTextString(m) }
func (*REDMessage) ProtoMessage()    {}
func (*REDMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb9fb1f207fd5b8c, []int{1}
}

func (m *REDMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_REDMessage.Unmarshal(m, b)
}
func (m *REDMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_REDMessage.Marshal(b, m, deterministic)
}
func (m *REDMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_REDMessage.Merge(m, src)
}
func (m *REDMessage) XXX_Size() int {
	return xxx_messageInfo_REDMessage.Size(m)
}
func (m *REDMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_REDMessage.DiscardUnknown(m)
}

var xxx_messageInfo_REDMessage proto.InternalMessageInfo

func (m *REDMessage) GetType() MessageType {
	if m != nil {
		return m.Type
	}
	return MessageType_EDIT
}

func (m *REDMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *REDMessage) GetReceipient() string {
	if m != nil {
		return m.Receipient
	}
	return ""
}

func (m *REDMessage) GetEdit() *Edit {
	if m != nil {
		return m.Edit
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.EditType", EditType_name, EditType_value)
	proto.RegisterEnum("api.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Edit)(nil), "api.Edit")
	proto.RegisterType((*REDMessage)(nil), "api.REDMessage")
}

func init() {
	proto.RegisterFile("api/messages.proto", fileDescriptor_cb9fb1f207fd5b8c)
}

var fileDescriptor_cb9fb1f207fd5b8c = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x8d, 0x8d, 0x65, 0x3b, 0x8b, 0x52, 0xe6, 0x20, 0x05, 0x59, 0xa9, 0xd5, 0x43, 0xd9,
	0x43, 0x0b, 0xeb, 0x3f, 0x90, 0xe6, 0x50, 0xd0, 0x15, 0x62, 0xf1, 0xe0, 0x2d, 0xdb, 0x86, 0xdd,
	0x1c, 0xb6, 0x0d, 0x4d, 0x3c, 0xd4, 0x7f, 0xe0, 0xbf, 0x96, 0xc6, 0x2a, 0xdd, 0xdb, 0xcb, 0x7b,
	0xc3, 0x37, 0x2f, 0x03, 0x28, 0xb4, 0xca, 0x8f, 0xd2, 0x18, 0xb1, 0x97, 0x26, 0xd3, 0x7d, 0x67,
	0x3b, 0xf4, 0x84, 0x56, 0xc9, 0x2b, 0x50, 0xd6, 0x28, 0x8b, 0x77, 0x40, 0xed, 0xa0, 0x65, 0x44,
	0x62, 0x92, 0x5e, 0x6d, 0x2e, 0x33, 0xa1, 0x55, 0x36, 0x06, 0xd5, 0xa0, 0x25, 0x77, 0x11, 0x86,
	0xe0, 0xe9, 0xce, 0x44, 0xe7, 0x31, 0x49, 0x2f, 0xf8, 0x28, 0x11, 0x81, 0xd6, 0x07, 0xd1, 0x47,
	0x9e, 0xb3, 0x9c, 0x4e, 0xbe, 0x09, 0x00, 0x67, 0xc5, 0xcb, 0xef, 0x2e, 0x7c, 0x38, 0xe1, 0x86,
	0x8e, 0x3b, 0x65, 0x33, 0xf4, 0x35, 0xf8, 0x46, 0xb6, 0x8d, 0xec, 0x1d, 0x3d, 0xe0, 0xd3, 0x0b,
	0x6f, 0x01, 0x7a, 0x59, 0x4b, 0xa5, 0x95, 0x6c, 0xad, 0x5b, 0x13, 0xf0, 0x99, 0x83, 0x2b, 0xa0,
	0xb2, 0x51, 0x36, 0xa2, 0x31, 0x49, 0x97, 0x9b, 0xe0, 0xbf, 0x35, 0x77, 0xf6, 0x3a, 0x81, 0xc5,
	0xdf, 0x1f, 0x10, 0xc0, 0x2f, 0xb7, 0x6f, 0x8c, 0x57, 0xe1, 0xd9, 0xa8, 0x0b, 0xf6, 0xcc, 0x2a,
	0x16, 0x92, 0xf5, 0x3d, 0x2c, 0x67, 0x7d, 0x70, 0x01, 0x94, 0x15, 0xe5, 0x34, 0x54, 0x6e, 0xdf,
	0xcb, 0x71, 0xe8, 0x69, 0xf5, 0x71, 0xb3, 0x57, 0xf6, 0xf0, 0xb9, 0xcb, 0xea, 0xee, 0x98, 0x7f,
	0x89, 0x41, 0x88, 0xb6, 0x17, 0x39, 0x67, 0x45, 0x2e, 0xb4, 0xda, 0xf9, 0xee, 0xa0, 0x8f, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0xc1, 0x53, 0xe9, 0x66, 0x01, 0x00, 0x00,
}
